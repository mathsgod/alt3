directive @hasRole on FIELD_DEFINITION
scalar JSON

type Query{
    me:Me
    credentialRequestOptions(username:String!):String
    UserGroup(usergroup_id:Int!):UserGroup
    UserGroups:[UserGroup]
    test:String
}

type Subscription{
    createUser(username:String!,password:String!,first_name:String!,last_name:String):Int
}

type Mutation{
    updateUser(user_id:Int!,data:UserInput):Boolean
    login(username:String!,password:String!,code:String):Me
    loginWebAuthn(username:String!,assertion:String!):Boolean
    UserGroup(usergroup_id:Int!):UserGroup
    forgotPassword(username:String!,email:String!):Boolean
    updateMyInfo(data:MyInfoInput):Boolean @hasRole(role:[Administrators,Power Users,Users])
    resetPassword(new_password:String!):Boolean @hasRole(role:[Administrators,Power Users,Users])
    updateFavoriteSequence(id:[Int!]!):Boolean @hasRole(role:[Administrators,Power Users,Users])
    addFavorite(label:String!,link:String):Boolean @hasRole(role:[Administrators,Power Users,Users])
    mainHeader(class:String!):Boolean @hasRole(role:[Administrators,Power Users,Users])
    sidebar(class:String!):Boolean @hasRole(role:[Administrators,Power Users,Users])
    bodyAddClass(class:String!):Boolean @hasRole(role:[Administrators,Power Users,Users])
    bodyRemoveClass(class:String!):Boolean @hasRole(role:[Administrators,Power Users,Users])
    sidebarNavAddClass(class:String!):Boolean @hasRole(role:[Administrators,Power Users,Users])
    sidebarNavRemoveClass(class:String!):Boolean @hasRole(role:[Administrators,Power Users,Users])
    updateTwoStepVerification(secret:String!,code:String!):Boolean
    removeTwoStepVerification:Boolean
    lost2StepDevice(username:String!,password:String!,email:String):Boolean
}

input UserInput{
    first_name:String
    last_name:String
}

input MyInfoInput{
    first_name:String
    last_name:String
    phone:String
    email:String
}

type Me{
    user_id:Int
    username:String
    first_name:String
    last_name:String
    phone:String
    email:String
    group:[UserGroup]
    credentialCreationOptions:String
    registrationWebAuthn(attestion:String!):Boolean
    jwt:String
    UserLog(limit:Int=10):[UserLog]
    EventLog(limit:Int=10):[EventLog]
    twoStepVerification:JSON
    hasTwoStepVerification:Boolean
}

type UserLog{
    login_time:String
    logout_time:String
    ip:String
    result:String
}

type UserGroup{
    name:String
    addUser(user_id:Int!):Boolean
    removeUser(user_id:Int!):Boolean
}

type EventLog{
    eventlog_id:Int
    class:String
    object_id:Int
    action:String
    created_time:String

}

