{% verbatim %}   
<div id="div1">
    <card>
        <card-body>
            <el-form label-width="auto">
                <el-form-item label="Module">
                    <el-select v-model="form.module" clearable filterable>
                        <el-option v-for="(m,index) in modules" :value="m.name" :label="m.name" :key="index"></el-option>
                    </el-select>
                </el-form-item>

                <el-form-item label="User group">
                    <el-select v-model="form.usergroup_id" @change="changeUserGroup" clearable filterable>
                        <el-option v-for="(ug,index) in usergroups" :value="ug.usergroup_id" :label="ug.name" :key="index"></el-option>
                    </el-select>
                </el-form-item>


                <el-form-item label="User">
                    <el-select v-model="form.user_id" @change="changeUser" clearable filterable>
                        <el-option v-for="(u,index) in users" :value="u.user_id"
                            :label="u.first_name + ' ' + u.last_name + ' (' + u.username + ')'" :key="index"></el-option>
                    </el-select>
                </el-form-item>

                <el-form-item label="SPECIAL USER" clearable>
                    <el-select v-model="form.special_user" @change="changeSpecialUser">
                        <el-option v-for="(k,v) in special_users" :value="v" :label="k"></el-option>
                    </el-select>
                </el-form-item>
            </el-form>


            <table class="table table-sm" v-if="data1.action">
                <thead>
                    <tr>
                        <th>Action</th>
                        <th>Allow</th>
                        <th>Deny</th>
                    </tr>
                </thead>

                <tbody>
                    <tr v-for="(a,index) in data1.action">
                        <td v-text="a.action"></td>
                        <td>
                            <el-checkbox v-model="a.allow" @change="actionChecked(a)"></el-checkbox>
                        </td>
                        <td>
                            <el-checkbox v-model="a.deny" @change="actionChecked(a)"></el-checkbox>
                        </td>
                    </tr>
                </tbody>
            </table>

            <table class="table table-sm" v-if="data1.path">
                <thead>
                    <tr>
                        <th>Path</th>
                        <th>Allow</th>
                        <th>Deny</th>
                    </tr>
                </thead>

                <tbody>
                    <tr v-for="(a,index) in data1.path">
                        <td>{{a.path}}<template v-if="a.path==''">[Nav menu]</template></td>
                        <td>
                            <el-checkbox v-model="a.allow" @change="actionChecked(a)"></el-checkbox>
                        </td>
                        <td>
                            <el-checkbox v-model="a.deny" @change="actionChecked(a)"></el-checkbox>
                        </td>
                    </tr>
                </tbody>
            </table>

          
        </card-body>
    </card>
</div>
{% endverbatim %}

<script>
    var vm = new Vue({
        el: "#div1",
        data: {
            form: {
                module: null,
                user_id: null,
                usergroup_id: null,
                special_user: null
            },
            custom: null,
            modules: [],
            usergroups: [],
            users: [],
            data1: [],
            special_users: [],
        },
        async created() {
            let resp = await this.$http.get("ACL/edit/data");
            this.modules = resp.data.module;
            this.usergroups = resp.data.usergroup;
            this.users = resp.data.user;
            this.special_users = resp.data.special_user;
        }, watch: {
            "form.module"() {
                this.getValue();
            }
        }, methods: {
            allowAddCustom() {
                if (this.form.user_id) return true;
                if (this.form.usergroup_id) return true;

                return false;

            },
            async actionChecked(a) {
                let p = this.form;
                p.value = a;
                let resp = await this.$http.post("ACL/edit", p);
                resp = resp.data;
                if (resp.data) {
                    this.$message({ message: "ACL updated", type: "success" })
                }
            },
            async getValue() {
                let p = this.form;
                let resp = await this.$http.get("ACL/edit/getValue", { params: p });
                this.data1 = resp.data;
            },
            changeSpecialUser() {
                this.form.user_id = null;
                this.form.usergroup_id = null;
                this.getValue();
            },
            changeUserGroup() {
                this.form.user_id = null;
                this.form.special_user = null;
                this.getValue();
            }, changeUser() {
                this.form.usergroup_id = null;
                this.form.special_user = null;
                this.getValue();
            }, onSaveCustom() {
                this.actionChecked(this.custom).then(resp => {
                    this.custom = null;
                    this.getValue();
                });

            }, delAction(a) {
                let p = this.form;

                p.value = a;

                this.$http.post("ACL/edit/delACL", p).then(resp => {
                    this.getValue();
                });
            }

        }

    });
</script>